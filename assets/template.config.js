/**
 * This file is a configuration file generated by the `Template` extension on `vscode`
 * @see https://marketplace.visualstudio.com/items?itemName=yongwoo.template
 */

// var changeCase=require('change-case');
// changeCase.camelCase('test string') //=> "testString"
// changeCase.constantCase('test string') //=> "TEST_STRING"
// changeCase.dotCase('test string') //=> "test.string"
// changeCase.headerCase('test string') //=> "Test-String"
// changeCase.isLowerCase('test string') //=> true
// changeCase.isUpperCase('test string') //=> false
// changeCase.lowerCase('TEST STRING') //=> "test string"
// changeCase.lowerCaseFirst('TEST') //=> "tEST"
// changeCase.noCase('test string') //=> "test string"
// changeCase.paramCase('test string') //=> "test-string"
// changeCase.pascalCase('test string') //=> "TestString"
// changeCase.pathCase('test string') //=> "test/string"
// changeCase.sentenceCase('testString') //=> "Test string"
// changeCase.snakeCase('test string') //=> "test_string"
// changeCase.swapCase('Test String') //=> "tEST sTRING"
// changeCase.titleCase('a simple test') //=> "A Simple Test"
// changeCase.upperCase('test string') //=> "TEST STRING"
// changeCase.upperCaseFirst('test') //=> "Test"

module.exports = {
  // You can change the template path to another path
  templateRootPath: './.templates',
  // After copying the template file the `replaceFileTextFn` function is executed
  replaceFileTextFn: (fileText, temp, utils) => {
    // @see https://www.npmjs.com/package/change-case
    const { changeCase } = utils
    // You can change the text in the file
    const templateName = temp.split('.')[0]

    return fileText
      .replace(/__templateName__/g, templateName)
      .replace(/__templateNameToPascalCase__/g, changeCase.pascalCase(templateName))
      .replace(/__templateNameToParamCase__/g, changeCase.paramCase(templateName))
      .replace(/__templateNameToCamelCase__/g, changeCase.camelCase(templateName))
      .replace(/__templateNameToPathCase__/g, changeCase.pathCase(templateName))
  },
  renameFileFn: (fileName, templateName, utils) => {
    const { changeCase } = utils

    const { path } = utils
    const { base } = path.parse(fileName)
    return base
      .replace(/__templateName__/gm, templateName)
      .replace(/__templateNameToPascalCase__/g, changeCase.pascalCase(templateName))
      .replace(/__templateNameToParamCase__/g, changeCase.paramCase(templateName))
      .replace(/__templateNameToCamelCase__/g, changeCase.camelCase(templateName))
      .replace(/__templateNameToPathCase__/g, changeCase.pathCase(templateName))
  },
  renameSubDirectoriesFn: (directoryName, templateName, _utils) => {
    const { changeCase } = _utils
    // const newDirectoryName = changeCase.paramCase(templateName)
    return directoryName
      .replace(/__templateName__/g, templateName)
      .replace(/__templateNameToPascalCase__/g, changeCase.pascalCase(templateName))
      .replace(/__templateNameToParamCase__/g, changeCase.paramCase(templateName))
      .replace(/__templateNameToCamelCase__/g, changeCase.camelCase(templateName))
      .replace(/__templateNameToPathCase__/g, changeCase.pathCase(templateName))
  }
}
